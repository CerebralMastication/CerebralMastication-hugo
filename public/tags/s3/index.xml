<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>S3 on Your site title</title>
    <link>https://cerebralmastication.netlify.com/tags/s3/</link>
    <description>Recent content in S3 on Your site title</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>&amp;copy; 2018. All rights reserved.</copyright>
    <lastBuildDate>Tue, 30 Nov 2010 19:51:17 +0000</lastBuildDate>
    
	<atom:link href="https://cerebralmastication.netlify.com/tags/s3/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Controlling Amazon Web Services using rJava and the AWS Java SDK</title>
      <link>https://cerebralmastication.netlify.com/2010/11/controlling-amazon-web-services-using-rjava-and-the-aws-java-sdk/</link>
      <pubDate>Tue, 30 Nov 2010 19:51:17 +0000</pubDate>
      
      <guid>https://cerebralmastication.netlify.com/2010/11/controlling-amazon-web-services-using-rjava-and-the-aws-java-sdk/</guid>
      <description>I&amp;rsquo;ve been messing around with using Amazon Web Services for a while. I&amp;rsquo;ve had some projects where I wanted to upload files to S3 or fire off EMR jobs. I&amp;rsquo;ve been controlling AWS services using a hodgepodge of command line tools and the R system() function to call the tools from the command line. This has some real disadvantages, however. Using the command line tools means each tool has to be configured individually which is painful on a new machine.</description>
    </item>
    
  </channel>
</rss>